// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using maternity_benefits.Storage.EF;

namespace esdc_simulation_api.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210707133113_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("maternity_benefits.Storage.EF.Models.MaternityBenefitsPerson", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<decimal>("AverageIncome")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<string>("EducationLevel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Province")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SpokenLanguage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MaternityBenefitsPerson");
                });

            modelBuilder.Entity("maternity_benefits.Storage.EF.Models.MaternityBenefitsPersonResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("BaseAmount")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<Guid>("PersonId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SimulationResultId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("VariantAmount")
                        .HasColumnType("decimal(7, 2)");

                    b.HasKey("Id");

                    b.HasIndex("PersonId");

                    b.HasIndex("SimulationResultId");

                    b.ToTable("MaternityBenefitsPersonResult");
                });

            modelBuilder.Entity("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BaseCaseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("SimulationName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("VariantCaseId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BaseCaseId")
                        .IsUnique();

                    b.HasIndex("VariantCaseId")
                        .IsUnique();

                    b.ToTable("MaternityBenefitsSimulation");
                });

            modelBuilder.Entity("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulationCase", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("MaxWeeklyAmount")
                        .HasColumnType("decimal(7, 2)");

                    b.Property<int>("NumWeeks")
                        .HasColumnType("int");

                    b.Property<double>("Percentage")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("MaternityBenefitsSimulationCase");
                });

            modelBuilder.Entity("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulationResult", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SimulationId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("SimulationId")
                        .IsUnique();

                    b.ToTable("MaternityBenefitsSimulationResult");
                });

            modelBuilder.Entity("maternity_benefits.Storage.EF.Models.MaternityBenefitsPersonResult", b =>
                {
                    b.HasOne("maternity_benefits.Storage.EF.Models.MaternityBenefitsPerson", "Person")
                        .WithMany()
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulationResult", "SimulationResult")
                        .WithMany("PersonResults")
                        .HasForeignKey("SimulationResultId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulation", b =>
                {
                    b.HasOne("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulationCase", "BaseCase")
                        .WithOne()
                        .HasForeignKey("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulation", "BaseCaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulationCase", "VariantCase")
                        .WithOne()
                        .HasForeignKey("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulation", "VariantCaseId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulationResult", b =>
                {
                    b.HasOne("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulation", "Simulation")
                        .WithOne()
                        .HasForeignKey("maternity_benefits.Storage.EF.Models.MaternityBenefitsSimulationResult", "SimulationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
